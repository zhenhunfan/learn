@startuml

abstract class ThreadState {
    # stateName:String
}
note top of New:具体状态类：新建状态
class New{
    + New():void
    + start(ThreadContext hj):void
}
note top of Runnable:具体状态类：就绪状态
class Runnable{
    + Runnable():void
    + getCPU(ThreadContext hj):void
}

note top of Dead:具体状态类：死亡状态
class Dead{
    + Dead():void
}
note top of Running:具体状态类：运行状态
class Running{
    + Running():void
    + suspend(ThreadContext hj):void
    + stop(ThreadContext hj):void
}


class Blocked{
    + Blocked():void
    + resume(ThreadContext hj):void
}
note top:具体状态类：阻塞状态

New --|> ThreadState
Runnable --|> ThreadState
Running --|> ThreadState
Dead --|> ThreadState
Blocked --|> ThreadState


class ThreadContext {
    - state:ThreadState
    ThreadContext():void
    + setState(ThreadState state):void
    + getState():void
    + start():void
    + getCPU():void
    + suspend():void
    + stop():void
    + resume():void
}
note right:环境类

ThreadState --o ThreadContext

@enduml